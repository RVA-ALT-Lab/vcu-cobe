
// Mixins, not worth having its own file.
// Border box
// Should probably use auto-prefix on this.
@mixin box-sizing($type) {
  -webkit-box-sizing: $type;
     -moz-box-sizing: $type;
          box-sizing: $type;
}

// Start the grid.
// Optional hard reset
* {
    margin: 0;
    padding: 0;
    @include box-sizing(border-box);
}

// clearfix
.frame {
    margin: 0 auto;
    max-width: $frame-width;
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

.frame-full {
    margin: 0 auto;
    max-width: $full;
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

// Attribute selector
// Also I've removed :last-of-type
[class*='bit-'] {
    float: left;
    padding: $bit-padding;
}

// Create grid widths (1-12)
@for $i from $start through $end {
    .bit-#{$i} {
        width: $full / $i;
    }
}

// Create offset widths (1 - 24)
@for $i from $start*2 through $end*2 {
    .offset-#{$i} {
        position: relative;
        left: $full / $i;
    }
}

// Common widths
// Please use the media queries below to respond these widths
// Feel free to pull request new widths
@each $i in $common {
    .bit-#{$i} {
        width: percentage($i / 100);
    }
}


// Responsiveness
// Feel free to use your own responsive widths and styles for the grid
// These are mostly for example use only.
// -------------------------------------------------------------------

// Mobile
@media (max-width: $small) {
    @for $i from $start through $end {
        .bit-#{$i} {
            width: $full
        }
    }
    // Zero out offsets for small sizes
    @for $i from $start*2 through $end*2 {
        .offset-#{$i} {
            position: relative;
            left: 0;
        }
    }
    // Set common widths to 100% for small sizes
    @each $i in $common {
        .bit-#{$i} {
            width: 100%;
        }
    }
}

// Portrait Tablet
@media (min-width: $small) and (max-width: $medium) {
    .bit-4,
    .bit-6,
    .bit-8,
    .bit-10,
    .bit-12 {
        width: $half;
    }

    .bit-1,
    .bit-2,
    .bit-3,
    .bit-5,
    .bit-7,
    .bit-9,
    .bit-11 {
        width: $full;
    }
    // Zero out offsets for small - medium sizes
    @for $i from $start*2 through $end*2 {
        .offset-#{$i} {
            position: relative;
            left: 0;
        }
    }
}

// Landscape Tablet
@media (min-width: $medium) and (max-width: $large) {
    .bit-2,
    .bit-7 {
        width: $full;
    }

    .bit-4,
    .bit-8,
    .bit-10,
    .bit-12 {
        width: $half;
    }
    // Zero out offsets for small - medium sizes
    @for $i from $start*2 through $end*2 {
        .offset-#{$i} {
            position: relative;
            left: 0;
        }
    }
}

@media (min-width: $large) {
    // Set frame to 1200px container for large sizes
    .frame {
        max-width: 1200px;
    }
}
